const { isNumeric } = require('validator');
const isString = require('./isString');
const isObject = require('./isObject');
const isArray = require('./isArray');

function isLength() {
    let min, max;

    if(isObject(arguments[1])) {
        if(arguments[1].hasOwnProperty('min') && isNumeric(arguments[1].min + '')) {
            min = arguments[1].min;
        }
        if(arguments[1].hasOwnProperty('max') && isNumeric(arguments[1].max + '')) {
            max = arguments[1].max;
        }
    }

    if(isString(arguments[0])) {
        if(min && max) return arguments[0].length >= min && arguments[0].length <= max;
        else if(min) return arguments[0].length >= min;
        else if(max) return arguments[0].length <= max;
        else return false;
    }else if(isObject(arguments[0])) {
        if(min && max) return Object.keys(arguments[0]).length >= min && Object.keys(arguments[0]).length <= max;
        else if(min) return Object.keys(arguments[0]).length >= min;
        else if(max) return Object.keys(arguments[0]).length <= max;
        else return false;
    }else if(isArray(arguments[0])) {
        if(min && max) return arguments[0].length >= min && arguments[0].length <= max;
        else if(min) return arguments[0].length >= min;
        else if(max) return arguments[0].length <= max;
        else return false;
    }else if(isNumeric(arguments[0] + '')) {
        if(min && max) return arguments[0] >= min && arguments[0] <= max;
        else if(min) return arguments[0] >= min;
        else if(max) return arguments[0] <= max;
        return false;
    }else {
        return false;
    }
}

module.exports = isLength;